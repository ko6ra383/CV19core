<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.com/icons/">
    <Style x:Key="BtnBase" TargetType="ButtonBase">
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="3 5" />
        <Setter Property="Background" Value="White" />
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource BtnBase}"/>
    <Style x:Key="PrimatyBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                Background="{TemplateBinding Background}" 
                BorderBrush="Black"
                Margin="5 0"
                BorderThickness="{TemplateBinding BorderThickness}" 
                SnapsToDevicePixels="true"
                CornerRadius="20">

                        <DockPanel HorizontalAlignment="Center">
                            <fa:FontAwesome Height="15" Icon="Solid_Check" Foreground="Black" FontSize="14"/>
                            <ContentPresenter x:Name="contentPresenter1"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter Property="Background" TargetName="border" Value="#337157"/>-->
                            <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#217010"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter1" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DangerBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Background" Value="OrangeRed" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <ControlTemplate x:Key="CheckButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" 
                Background="SeaGreen" 
                BorderBrush="Black"
                Margin="5 0"
                BorderThickness="{TemplateBinding BorderThickness}" 
                SnapsToDevicePixels="true"
                CornerRadius="20">

            <DockPanel HorizontalAlignment="Center">
                <fa:FontAwesome Height="15" Icon="Solid_Check" Foreground="Black" FontSize="14"/>
                <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="#337157"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="#217010"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="Gray"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="CheckButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Goldenrod" />
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="5 10" />
        <Setter Property="Template" Value="{StaticResource CheckButtonTemplate}"/>
    </Style>

    <ControlTemplate x:Key="DeleteButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" 
                Background="IndianRed" 
                BorderBrush="Black" 
                Margin="5 0"
                BorderThickness="{TemplateBinding BorderThickness}" 
                SnapsToDevicePixels="true"
                CornerRadius="20">

            <DockPanel HorizontalAlignment="Center">
                <fa:FontAwesome Height="15" Icon="Solid_Times" Foreground="Black" FontSize="14" Margin="0 0 5 0"/>
                <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              HorizontalAlignment="Center"
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="#C24A62"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="#8C253A"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="Gray"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Goldenrod" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="0 5" />
        <Setter Property="Template" Value="{StaticResource DeleteButtonTemplate}"/>
    </Style>
</ResourceDictionary>